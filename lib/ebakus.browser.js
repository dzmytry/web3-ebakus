!function(U,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports["web3-ebakus"]=F():U.Web3Ebakus=F()}(window,function(){return function(U){var F={};function Q(B){if(F[B])return F[B].exports;var R=F[B]={i:B,l:!1,exports:{}};return U[B].call(R.exports,R,R.exports,Q),R.l=!0,R.exports}return Q.m=U,Q.c=F,Q.d=function(U,F,B){Q.o(U,F)||Object.defineProperty(U,F,{enumerable:!0,get:B})},Q.r=function(U){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(U,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(U,"__esModule",{value:!0})},Q.t=function(U,F){if(1&F&&(U=Q(U)),8&F)return U;if(4&F&&"object"==typeof U&&U&&U.__esModule)return U;var B=Object.create(null);if(Q.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:U}),2&F&&"string"!=typeof U)for(var R in U)Q.d(B,R,function(F){return U[F]}.bind(null,R));return B},Q.n=function(U){var F=U&&U.__esModule?function(){return U.default}:function(){return U};return Q.d(F,"a",F),F},Q.o=function(U,F){return Object.prototype.hasOwnProperty.call(U,F)},Q.p="",Q(Q.s=4)}([function(U,F,Q){U.exports=Q(5)().Promise},function(U,F,Q){Q(7);var B=function(U,F){return parseInt(U.slice(2*F+2,2*F+4),16)},R=function(U){return(U.length-2)/2},l=function(U){for(var F=[],Q=2,B=U.length;Q<B;Q+=2)F.push(parseInt(U.slice(Q,Q+2),16));return F},V=function(U){for(var F="0x",Q=0,B=U.length;Q<B;++Q){var R=U[Q];F+=(R<16?"0":"")+R.toString(16)}return F};U.exports={random:function(U){var F=void 0;F="undefined"!=typeof window&&window.crypto&&window.crypto.getRandomValues?window.crypto.getRandomValues(new Uint8Array(U)):Q(8).randomBytes(U);for(var B="0x",R=0;R<U;++R)B+=("00"+F[R].toString(16)).slice(-2);return B},length:R,concat:function(U,F){return U.concat(F.slice(2))},flatten:function(U){return"0x"+U.reduce(function(U,F){return U+F.slice(2)},"")},slice:function(U,F,Q){return"0x"+Q.slice(2*U+2,2*F+2)},reverse:function(U){for(var F="0x",Q=0,B=R(U);Q<B;++Q)F+=U.slice(2*(B-Q),2*(B-Q+1));return F},pad:function U(F,Q){return Q.length===2*F+2?Q:U(F,"0x0"+Q.slice(2))},padRight:function U(F,Q){return Q.length===2*F+2?Q:U(F,Q+"0")},fromAscii:function(U){for(var F="0x",Q=0;Q<U.length;++Q)F+=("00"+U.charCodeAt(Q).toString(16)).slice(-2);return F},toAscii:function(U){for(var F="",Q=2;Q<U.length;Q+=2)F+=String.fromCharCode(parseInt(U.slice(Q,Q+2),16));return F},fromString:function(U){for(var F=function(U){var F=U.toString(16);return F.length<2?"0"+F:F},Q="0x",B=0;B!=U.length;B++){var R=U.charCodeAt(B);if(R<128)Q+=F(R);else{if(R<2048)Q+=F(R>>6|192);else{if(R>55295&&R<56320){if(++B==U.length)return null;var l=U.charCodeAt(B);if(l<56320||l>57343)return null;Q+=F((R=65536+((1023&R)<<10)+(1023&l))>>18|240),Q+=F(R>>12&63|128)}else Q+=F(R>>12|224);Q+=F(R>>6&63|128)}Q+=F(63&R|128)}}return Q},toString:function(U){for(var F="",Q=0,l=R(U);Q<l;){var V=B(U,Q++);if(V>127){if(V>191&&V<224){if(Q>=l)return null;V=(31&V)<<6|63&B(U,Q)}else if(V>223&&V<240){if(Q+1>=l)return null;V=(15&V)<<12|(63&B(U,Q))<<6|63&B(U,++Q)}else{if(!(V>239&&V<248))return null;if(Q+2>=l)return null;V=(7&V)<<18|(63&B(U,Q))<<12|(63&B(U,++Q))<<6|63&B(U,++Q)}++Q}if(V<=65535)F+=String.fromCharCode(V);else{if(!(V<=1114111))return null;V-=65536,F+=String.fromCharCode(V>>10|55296),F+=String.fromCharCode(1023&V|56320)}}return F},fromNumber:function(U){var F=U.toString(16);return F.length%2==0?"0x"+F:"0x0"+F},toNumber:function(U){return parseInt(U.slice(2),16)},fromNat:function(U){return"0x0"===U?"0x":U.length%2==0?U:"0x0"+U.slice(2)},toNat:function(U){return"0"===U[2]?"0x"+U.slice(3):U},fromArray:V,toArray:l,fromUint8Array:function(U){return V([].slice.call(U,0))},toUint8Array:function(U){return new Uint8Array(l(U))}}},function(U,F){U.exports={encode:function(U){var F=function(U){return(F=U.toString(16)).length%2==0?F:"0"+F;var F},Q=function(U,Q){return U<56?F(Q+U):F(Q+F(U).length/2+55)+F(U)};return"0x"+function U(F){if("string"==typeof F){var B=F.slice(2);return(2!=B.length||B>="80"?Q(B.length/2,128):"")+B}var R=F.map(U).join("");return Q(R.length/2,192)+R}(U)},decode:function(U){var F=2,Q=function(){if(F>=U.length)throw"";var Q=U.slice(F,F+2);return Q<"80"?(F+=2,"0x"+Q):Q<"c0"?R():l()},B=function(){var Q=parseInt(U.slice(F,F+=2),16)%64;return Q<56?Q:parseInt(U.slice(F,F+=2*(Q-55)),16)},R=function(){var Q=B();return"0x"+U.slice(F,F+=2*Q)},l=function(){for(var U=2*B()+F,R=[];F<U;)R.push(Q());return R};try{return Q()}catch(U){return[]}}}},function(U,F,Q){U.exports=function(){return Q(20)('!function(U){var F={};function Q(B){if(F[B])return F[B].exports;var R=F[B]={i:B,l:!1,exports:{}};return U[B].call(R.exports,R,R.exports,Q),R.l=!0,R.exports}Q.m=U,Q.c=F,Q.d=function(U,F,B){Q.o(U,F)||Object.defineProperty(U,F,{enumerable:!0,get:B})},Q.r=function(U){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(U,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(U,"__esModule",{value:!0})},Q.t=function(U,F){if(1&F&&(U=Q(U)),8&F)return U;if(4&F&&"object"==typeof U&&U&&U.__esModule)return U;var B=Object.create(null);if(Q.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:U}),2&F&&"string"!=typeof U)for(var R in U)Q.d(B,R,function(F){return U[F]}.bind(null,R));return B},Q.n=function(U){var F=U&&U.__esModule?function(){return U.default}:function(){return U};return Q.d(F,"a",F),F},Q.o=function(U,F){return Object.prototype.hasOwnProperty.call(U,F)},Q.p="",Q(Q.s=2)}([function(U,F){U.exports=function(U){for(var F=0,Q=0;Q<U.length;Q++,F+=8)if(0!==U[Q]){F+=Math.clz32(U[Q])-24;break}return F}},function(U,F){U.exports="data:application/javascript;base64,"},function(U,F,Q){"use strict";Q.r(F);var B=Q(0),R=Q.n(B),l=Q(1);importScripts(Q.n(l).a);var V=Module.cwrap("cryptonight","",[]),W=function(U,F){for(var Q=new Uint8Array(U,Module._malloc(F.length/2),F.length/2),B=0;B<F.length/2;B++)Q[B]=parseInt(F.substr(2*B,2),16);return Q},Z=function(U,F){V(F.byteOffset,U.byteOffset,U.byteLength,0,2),F.reverse()};onmessage=function(U){var F,Q,B,l=U.data,V=l.hash,J=l.targetDifficulty,d=0,S=(F=500,Q=function(){postMessage({cmd:"current",workNonce:d})},B=0,function(){var U=(new Date).getTime();if(!(U-B<F))return B=U,Q.apply(void 0,arguments)});!function(){var U=Math.log2(J),F=U=Math.ceil(U),Q=Module.HEAPU8.buffer,B=new Uint8Array(Q,Module._malloc(64),64),l=W(Q,V),N=new Uint8Array(Q,Module._malloc(32),32);Z(l,N),B.set(N,0);var E=new DataView(Q,B.byteOffset,B.byteLength),C=Module._malloc(32),I=0;do{E.setUint32(60,d);var k=new Uint8Array(Q,C,32);Z(B,k);var n=R()(k);if(n>I&&(I=n)>=F)break;d++,S()}while(I<=F)}(),postMessage({cmd:"finished",workNonce:d})},Module.onRuntimeInitialized=function(){postMessage({cmd:"ready"})}}]);',Q.p+"web.worker.js")}},function(U,F,Q){"use strict";Q.r(F);var B=Q(0),R=Q.n(B),l=Q(2),V=Q.n(l),W=Q(1),Z=Q.n(W),J=Q(3),d=Q.n(J);function S(U){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(U){return typeof U}:function(U){return U&&"function"==typeof Symbol&&U.constructor===Symbol&&U!==Symbol.prototype?"symbol":typeof U})(U)}var N=function(){try{if("object"===("undefined"==typeof WebAssembly?"undefined":S(WebAssembly))&&"function"==typeof WebAssembly.instantiate){var U=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(U instanceof WebAssembly.Module)return new WebAssembly.Instance(U)instanceof WebAssembly.Instance}}catch(U){}return!1}();F.default=function(U){U.eth.calculateWorkForTransaction=function(F,Q,B,l){var W=!1;return l=l||function(){},N?F?R.a.resolve(function(F){if(Q||(W=new Error('"targetDifficulty" is missing')),F.gas||F.gasLimit||(W=new Error('"gas" is missing')),(F.nonce<0||F.gas<0||F.chainId<0)&&(W=new Error("Gas, nonce or chainId is lower than 0")),W)return l(W),R.a.reject(W);try{var J=F=U.extend.formatters.inputCallFormatter(F);J.to=F.to||"0x",J.data=F.data||"0x",J.value=F.value||"0x",J.chainId=U.utils.numberToHex(F.chainId),J.workNonce="0x";var N={hash:V.a.encode([Z.a.fromNat(J.nonce),Z.a.fromNat(J.gas),J.to.toLowerCase(),Z.a.fromNat(J.value),J.data]),targetDifficulty:Q};return new R.a(function(Q,R){var V=0,W=!1,Z=new d.a;Z.onmessage=function(B){var R=B.target,J=B.data,d=J.cmd,S=J.workNonce;switch(d){case"ready":W=!0,Z.postMessage(N);break;case"current":V=S;break;case"finished":F.workNonce=U.utils.numberToHex(S),W=!1,R.terminate(),l(null,F),Q(F);break;default:console.warn("Unknown data from worker",B.data)}},"object"===S(B)&&(B.isRunning=function(){return W},B.getCurrentWorkNonce=function(){return V},B.kill=function(){W=!1,V=0,Z.terminate(),R("Worker terminated by user")})})}catch(U){return l(U),R.a.reject(U)}}(F)):(W=new Error("No transaction object given!"),l(W),R.a.reject(W)):(W=new Error("Wasm is not supported by browser. CryptoNight can't load."),l(W),R.a.reject(W))};var F=U.eth.accounts._addAccountFunctions;return U.eth.accounts._addAccountFunctions=function(Q){return(Q=F.call(this,Q)).calculateWorkForTransaction=U.eth.calculateWorkForTransaction,Q},U}},function(U,F,Q){"use strict";U.exports=Q(6)(window,function(){if(void 0===window.Promise)throw new Error("any-promise browser requires a polyfill or explicit registration e.g: require('any-promise/register/bluebird')");return{Promise:window.Promise,implementation:"window.Promise"}})},function(U,F,Q){"use strict";var B=null;U.exports=function(U,F){return function(Q,R){Q=Q||null;var l=!1!==(R=R||{}).global;if(null===B&&l&&(B=U["@@any-promise/REGISTRATION"]||null),null!==B&&null!==Q&&B.implementation!==Q)throw new Error('any-promise already defined as "'+B.implementation+'".  You can only register an implementation before the first  call to require("any-promise") and an implementation cannot be changed');return null===B&&(B=null!==Q&&void 0!==R.Promise?{Promise:R.Promise,implementation:Q}:F(Q),l&&(U["@@any-promise/REGISTRATION"]=B)),B}}},function(U,F){var Q=function(U,F){for(var Q=[],B=0;B<U;++B)Q.push(F(B));return Q};U.exports={generate:Q,replicate:function(U,F){return Q(U,function(){return F})},concat:function(U,F){return U.concat(F)},flatten:function(U){for(var F=[],Q=0,B=U.length;Q<B;++Q)for(var R=0,l=U[Q].length;R<l;++R)F.push(U[Q][R]);return F},chunksOf:function(U,F){for(var Q=[],B=0,R=F.length;B<R;B+=U)Q.push(F.slice(B,B+U));return Q}}},function(U,F,Q){"use strict";F.randomBytes=F.rng=F.pseudoRandomBytes=F.prng=Q(9),F.createHash=F.Hash=Q(10),F.createHmac=F.Hmac=Q(11);var B=Q(12),R=Object.keys(B),l=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"].concat(R);F.getHashes=function(){return l};var V=Q(13);F.pbkdf2=V.pbkdf2,F.pbkdf2Sync=V.pbkdf2Sync;var W=Q(14);F.Cipher=W.Cipher,F.createCipher=W.createCipher,F.Cipheriv=W.Cipheriv,F.createCipheriv=W.createCipheriv,F.Decipher=W.Decipher,F.createDecipher=W.createDecipher,F.Decipheriv=W.Decipheriv,F.createDecipheriv=W.createDecipheriv,F.getCiphers=W.getCiphers,F.listCiphers=W.listCiphers;var Z=Q(15);F.DiffieHellmanGroup=Z.DiffieHellmanGroup,F.createDiffieHellmanGroup=Z.createDiffieHellmanGroup,F.getDiffieHellman=Z.getDiffieHellman,F.createDiffieHellman=Z.createDiffieHellman,F.DiffieHellman=Z.DiffieHellman;var J=Q(16);F.createSign=J.createSign,F.Sign=J.Sign,F.createVerify=J.createVerify,F.Verify=J.Verify,F.createECDH=Q(17);var d=Q(18);F.publicEncrypt=d.publicEncrypt,F.privateEncrypt=d.privateEncrypt,F.publicDecrypt=d.publicDecrypt,F.privateDecrypt=d.privateDecrypt;var S=Q(19);F.randomFill=S.randomFill,F.randomFillSync=S.randomFillSync,F.createCredentials=function(){throw new Error(["sorry, createCredentials is not implemented yet","we accept pull requests","https://github.com/crypto-browserify/crypto-browserify"].join("\n"))},F.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}},function(U,F){U.exports=require("randombytes")},function(U,F){U.exports=require("create-hash")},function(U,F){U.exports=require("create-hmac")},function(U,F){U.exports=require("browserify-sign/algos")},function(U,F){U.exports=require("pbkdf2")},function(U,F){U.exports=require("browserify-cipher")},function(U,F){U.exports=require("diffie-hellman")},function(U,F){U.exports=require("browserify-sign")},function(U,F){U.exports=require("create-ecdh")},function(U,F){U.exports=require("public-encrypt")},function(U,F){U.exports=require("randomfill")},function(U,F,Q){"use strict";var B=window.URL||window.webkitURL;U.exports=function(U,F){try{try{var Q;try{(Q=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(U),Q=Q.getBlob()}catch(F){Q=new Blob([U])}return new Worker(B.createObjectURL(Q))}catch(F){return new Worker("data:application/javascript,"+encodeURIComponent(U))}}catch(U){if(!F)throw Error("Inline worker is not supported");return new Worker(F)}}}]).default});